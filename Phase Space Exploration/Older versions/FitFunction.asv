function [nFit,fitParameter,fittedFun]=FitFunction(i,nFit,fitParameter,x,y,xFactor,yFactor)

% Find the best function to predict the next point
% do not use more that 6 points

yy = y/yFactor;
xx = x/xFactor;


while ((i-nFit)>0 && fitParameter>=0.99) && nFit<6
    % Start with linear fit
    if sum(yy(i)==yy((i-nFit):i))~=(nFit+1)
        [TempFun,gof]=fit(yy((i-nFit):i),xx((i-nFit):i),'poly1');
        fitParameter = GetFitParameter(gof);
    else                    % we have a stright line
        
    %     if fitParameter<0.99
%         % Try 2nd order polynomial fit
%         [TempFun,gof]=fit(yy((i-nFit):i),xx((i-nFit):i),'exp1');
%         fitParameter = GetFitParameter(gof);
%     end
%     if fitParameter<0.99
%         % Try 2nd order polynomial fit
%         [TempFun,gof]=fit(yy((i-nFit):i),xx((i-nFit):i),'poly2');
%         fitParameter = GetFitParameter(gof);
%     end
%     if fitParameter<0.99
%         % Try 'exp2' fit
%         [TempFun,gof]=fit(yy((i-nFit):i),xx((i-nFit):i),'exp2');
%         fitParameter = GetFitParameter(gof);
%     end
    if fitParameter>=0.99           % update the function and nFit
        nFit = nFit + 1;            % Add 1 to nFit if the linear fit is good
        fittedFun = TempFun;
    end
end

disp('Function fitted to data')
fittedFun
